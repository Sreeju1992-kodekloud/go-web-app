on:
    workflow_dispatch
jobs:
    checkout_repos:
        runs-on: self-hosted
        container: node:18-alpine

        steps:
        - name: Install packages
          run: |
            apk update && \
            apk add bash git postgresql-client sudo && \
            apk add --no-cache python3 make g++ openssh && \
            apk add curl && \
            apk add ca-certificates && \
            rm -rf /var/cache/apk/* && \
            npm install -g pnpm

        - name: Checkout current repo
          uses: actions/checkout@v4
          with:
            path: GO-WEB-APP

        - name: Checkout Example-Voting-app
          uses: actions/checkout@v4
          with:
            path: Example-Voting-app
            ssh-key: ${{secrets.REPO_B_PRIVATE_KEY}}

        - name: Set ownership
          run: |
              # this is to fix GIT not liking owner of the checkout dir
              chown -R $(id -u):$(id -g) $PWD

        - name: Run Migrate.sh script
          working-directory: GO-WEB-APP/scripts
          run: |
            pwd
            chmod +x migrate.sh
            ./migrate.sh inventory

        - name: Compare and push the files
          working-directory: Example-Voting-app
          run: |
            if [ -n "$(git status --porcelain)" ]; then
               echo "Changes detected in the repository. Preparing to commit and push."
               echo "changes_detected=true" >> $GITHUB_ENV
               git config --global user.name "GitHub Actions"
               git config --global user.email "actions@github.com"
               git add -A
               git commit -m "Auto-commit: Changes detected and committed automatically"
               git push origin $(git rev-parse --abbrev-ref HEAD)
            else
               echo "No changes detected"
               echo "changes_detected=false" >> $GITHUB_ENV
            fi

        - name: Action if no changes detected
          if: env.changes_detected == 'false'
          run: |
            echo "No action needed"

        - name: Trigger Workflow in repository B
          if: env.changes_detected == 'true'
          run: |
            curl -L -f \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPOSITORY_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Sreeju1992-kodekloud/Example-Voting-app/dispatches \
            -d '{"event_type":"dispatch-event", "client_payload": {"branch": "git-testing","message": "Hello from the trigger repository!"}}'


